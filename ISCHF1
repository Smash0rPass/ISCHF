local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- GUI Variables
local isEnabled = false
local isFishing = false
local isSpamMode = false
local dragging
local dragInput
local dragStart
local startPos

-- Tool tracking
local previousTool = nil
local isProcessingMap = false
local lastCastTime = 0
local CAST_COOLDOWN = 2  -- 2 second cooldown between casts

-- Position tracking
local savedPosition = nil
local savedRotation = nil
local mapPosition = CFrame.new(-2824, 214.17860412597656, 1520)

-- New variables for spawn menu
local spawnMenuOpen = false
local spawnMenu = nil
local locationsMenu = nil
local locationsMenuOpen = false

--For the frames movement.
local lastMainFramePosition = nil
local menuUpdateConnection = nil


--Custom Locations
local FishAreas = {
    ["Altar"] = CFrame.new(1296.320068359375, -808.5519409179688, -298.93817138671875),
    ["Arch"] = CFrame.new(998.966796875, 126.6849365234375, -1237.1434326171875),
    ["Birch"] = CFrame.new(1742.3203125, 138.25787353515625, -2502.23779296875),
    ["Brine"] = CFrame.new(-1794.10596, -145.849701, -3302.92358, -5.16176224e-05, 3.10316682e-06, 0.99999994, 0.119907647, 0.992785037, 3.10316682e-06, -0.992785037, 0.119907647, -5.16176224e-05),
    ["Desolate Deep"] = CFrame.new(-1510.88672, -237.695053, -2852.90674, 0.573604643, 0.000580655003, 0.81913209, -0.000340352941, 0.999999762, -0.000470530824, -0.819132209, -8.89541116e-06, 0.573604763),
    ["Desolate Deep Shop"] = CFrame.new(-979.196411, -247.910156, -2699.87207, 0.587748766, 0, 0.809043527, 0, 1, 0, -0.809043527, 0, 0.587748766),
    ["Forsaken Shores"] = CFrame.new(-2489.40918, 129.934937, 1566.6665, 0, 0, -1, 0, 1, 0, 1, 0, 0),
    ["Forsaken Shores Pond"] = CFrame.new(-2690.992919921875, 164.75003051757812, 1729.8953857421875),
    ["Enchant"] = CFrame.new(1296.320068359375, -808.5519409179688, -298.93817138671875),
    ["Executive"] = CFrame.new(-29.836761474609375, -250.48486328125, 199.11614990234375),
    ["Keepers Altar"] = CFrame.new(1296.320068359375, -808.5519409179688, -298.93817138671875),
    ["Mod's House"] = CFrame.new(-30.205902099609375, -249.40594482421875, 204.0529022216797)
}

local NpcsPeople = {
    ["Merlin"] = CFrame.new(-931, 225, -990),
    ["Quiet Synph"] = CFrame.new(566.263245, 152.000031, 353.872101, -0.753558397, 0, -0.657381535, 0, 1, 0, 0.657381535, 0, -0.753558397),
    ["Pierre"] = CFrame.new(391.38855, 135.348389, 196.712387, -1, 0, 0, 0, 1, 0, 0, 0, -1),
    ["Phineas"] = CFrame.new(469.912292, 150.69342, 277.954987, 0.886104584, -0, -0.46348536, 0, 1, -0, 0.46348536, 0, 0.886104584),
    ["Paul"] = CFrame.new(381.741882, 136.500031, 341.891022, -1, 0, 0, 0, 1, 0, 0, 0, -1),
    ["Shipwright"] = CFrame.new(357.972595, 133.615967, 258.154541, 0, 0, -1, 0, 1, 0, 1, 0, 0),
    ["Angler"] = CFrame.new(480.102478, 150.501053, 302.226898, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    ["Marc"] = CFrame.new(466.160034, 151.00206, 224.497086, -0.996853352, 0, -0.0792675018, 0, 1, 0, 0.0792675018, 0, -0.996853352),
    ["Lucas"] = CFrame.new(449.33963, 181.999893, 180.689072, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    ["Latern Keeper"] = CFrame.new(-39.0456772, -246.599976, 195.644363, -1, 0, 0, 0, 1, 0, 0, 0, -1),
    ["Latern Keeper 2"] = CFrame.new(-17.4230175, -304.970276, -14.529892, -1, 0, 0, 0, 1, 0, 0, 0, -1),
    ["Inn Keeper"] = CFrame.new(487.458466, 150.800034, 231.498932, -0.564704418, 0, -0.825293183, 0, 1, 0, 0.825293183, 0, -0.564704418),
    ["Roslit_Keeper"] = CFrame.new(-1512.37891, 134.500031, 631.24353, 0.738236904, 0, -0.674541533, 0, 1, 0, 0.674541533, 0, 0.738236904),
    ["FishingNpc 1"] = CFrame.new(-1429.04138, 134.371552, 686.034424, 0, 0.0168599077, -0.999857903, 0, 0.999857903, 0.0168599077, 1, 0, 0),
    ["FishingNpc 2"] = CFrame.new(-1778.55408, 149.791779, 648.097107, 0.183140755, 0.0223737024, -0.982832015, 0, 0.999741018, 0.0227586292, 0.983086705, -0.00416803267, 0.183093324),
    ["FishingNpc 3"] = CFrame.new(-1778.26807, 147.83165, 653.258606, -0.129575253, 0.501478612, 0.855411887, -2.44146213e-05, 0.862683058, -0.505744994, -0.991569638, -0.0655529201, -0.111770131),
    ["Henry"] = CFrame.new(483.539307, 152.383057, 236.296143, -0.789363742, 0, 0.613925934, 0, 1, 0, -0.613925934, 0, -0.789363742),
    ["Daisy"] = CFrame.new(581.550049, 165.490753, 213.499969, -0.964885235, 0, -0.262671858, 0, 1, 0, 0.262671858, 0, -0.964885235),
    ["Appraiser"] = CFrame.new(453.182373, 150.500031, 206.908783, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    ["Merchant"] = CFrame.new(416.690521, 130.302628, 342.765289, -0.249025017, -0.0326484665, 0.967946589, -0.0040341015, 0.999457955, 0.0326734781, -0.968488574, 0.00423171744, -0.249021754),
    ["Mod Keeper"] = CFrame.new(-39.0905838, -245.141144, 195.837891, -0.948549569, -0.0898146331, -0.303623199, -0.197293222, 0.91766715, 0.34490931, 0.247647122, 0.387066364, -0.888172567),
    ["Ashe"] = CFrame.new(-1709.94055, 149.862411, 729.399536, -0.92290163, 0.0273250472, -0.384064913, 0, 0.997478604, 0.0709675401, 0.385035753, 0.0654960647, -0.920574605),
    ["Alfredrickus"] = CFrame.new(-1520.60632, 142.923264, 764.522034, 0.301733732, 0.390740901, -0.869642735, 0.0273988936, 0.908225596, 0.417582989, 0.952998459, -0.149826124, 0.26333645),
}

local ItemsLocation = {
    ["Training Rod"] = CFrame.new(457.693848, 148.357529, 230.414307, 1, -0, 0, 0, 0.975410998, 0.220393807, -0, -0.220393807, 0.975410998),
    ["Plastic Rod"] = CFrame.new(454.425385, 148.169739, 229.172424, 0.951755166, 0.0709736273, -0.298537821, -3.42726707e-07, 0.972884834, 0.231290117, 0.306858391, -0.220131472, 0.925948203),
    ["Lucky Rod"] = CFrame.new(446.085999, 148.253006, 222.160004, 0.974526405, -0.22305499, 0.0233404674, 0.196993902, 0.901088715, 0.386306256, -0.107199371, -0.371867687, 0.922075212),
    ["Kings Rod"] = CFrame.new(1375.57642, -810.201721, -303.509247, -0.7490201, 0.662445903, -0.0116144121, -0.0837960541, -0.0773290396, 0.993478119, 0.657227278, 0.745108068, 0.113431036),
    ["Flimsy Rod"] = CFrame.new(471.107697, 148.36171, 229.642441, 0.841614008, 0.0774728209, -0.534493923, 0.00678436086, 0.988063335, 0.153898612, 0.540036798, -0.13314943, 0.831042409),
    ["Nocturnal Rod"] = CFrame.new(-141.874237, -515.313538, 1139.04529, 0.161644459, -0.98684907, 1.87754631e-05, 1.87754631e-05, 2.21133232e-05, 1, -0.98684907, -0.161644459, 2.21133232e-05),
    ["Fast Rod"] = CFrame.new(447.183563, 148.225739, 220.187454, 0.981104493, 1.26492232e-05, 0.193478703, -0.0522461236, 0.962867677, 0.264870107, -0.186291039, -0.269973755, 0.944674432),
    ["Carbon Rod"] = CFrame.new(454.083618, 150.590073, 225.328827, 0.985374212, -0.170404434, 1.41561031e-07, 1.41561031e-07, 1.7285347e-06, 1, -0.170404434, -0.985374212, 1.7285347e-06),
    ["Long Rod"] = CFrame.new(485.695038, 171.656326, 145.746109, -0.630167365, -0.776459217, -5.33461571e-06, 5.33461571e-06, -1.12056732e-05, 1, -0.776459217, 0.630167365, 1.12056732e-05),
    ["Mythical Rod"] = CFrame.new(389.716705, 132.588821, 314.042847, 0, 1, 0, 0, 0, -1, -1, 0, 0),
    ["Midas Rod"] = CFrame.new(401.981659, 133.258316, 326.325745, 0.16456604, 0.986365497, 0.00103566051, 0.00017541647, 0.00102066994, -0.999999464, -0.986366034, 0.1645661, -5.00679016e-06),
    ["Trident Rod"] = CFrame.new(-1484.34192, -222.325562, -2194.77002, -0.466092706, -0.536795318, 0.703284025, -0.319611132, 0.843386114, 0.43191275, -0.824988723, -0.0234660208, -0.56466186),
    ["Enchated Altar"] = CFrame.new(1310.54651, -799.469604, -82.7303467, 0.999973059, 0, 0.00733732153, 0, 1, 0, -0.00733732153, 0, 0.999973059),
    ["Bait Crate"] = CFrame.new(384.57513427734375, 135.3519287109375, 337.5340270996094),
    ["Quality Bait Crate"] = CFrame.new(-177.876, 144.472, 1932.844),
    ["Crab Cage"] = CFrame.new(474.803589, 149.664566, 229.49469, -0.721874595, 0, 0.692023814, 0, 1, 0, -0.692023814, 0, -0.721874595),
    ["GPS"] = CFrame.new(517.896729, 149.217636, 284.856842, 7.39097595e-06, -0.719539165, -0.694451928, -1, -7.39097595e-06, -3.01003456e-06, -3.01003456e-06, 0.694451928, -0.719539165),
    ["Basic Diving Gear"] = CFrame.new(369.174774, 132.508835, 248.705368, 0.228398502, -0.158300221, -0.96061182, 1.58026814e-05, 0.986692965, -0.162594408, 0.973567724, 0.037121132, 0.225361705),
    ["Fish Radar"] = CFrame.new(365.75177, 134.50499, 274.105804, 0.704499543, -0.111681774, -0.70086211, 1.32396817e-05, 0.987542748, -0.157350808, 0.709704578, 0.110844307, 0.695724905)
}

--Locations order
local ZonesOrder = {
    "Altar",
    "Arch",
    "Birch",
    "Brine",
    "Desolate Deep",
    "Desolate Deep Shop",
    "Forsaken Shores",
    "Forsaken Shores Pond",
    "Enchant",
    "Executive",
    "Keepers Altar",
    "Mod's House"
}

local NpcsOrder = {
    "Merlin",
    "Quiet Synph",
    "Pierre",
    "Phineas",
    "Paul",
    "Shipwright",
    "Angler",
    "Marc",
    "Lucas",
    "Latern Keeper",
    "Latern Keeper 2",
    "Inn Keeper",
    "Roslit_Keeper",
    "FishingNpc 1",
    "FishingNpc 2",
    "FishingNpc 3",
    "Henry",
    "Daisy",
    "Appraiser",
    "Merchant",
    "Mod Keeper",
    "Ashe",
    "Alfredrickus"
}

local ItemsOrder = {
    "Training Rod",
    "Plastic Rod",
    "Lucky Rod",
    "Kings Rod",
    "Flimsy Rod",
    "Nocturnal Rod",
    "Fast Rod",
    "Carbon Rod",
    "Long Rod",
    "Mythical Rod",
    "Midas Rod",
    "Trident Rod",
    "Enchated Altar",
    "Bait Crate",
    "Quality Bait Crate",
    "Crab Cage",
    "GPS",
    "Basic Diving Gear",
    "Fish Radar"
}

-- Function to teleport to spawn
local function teleportToSpawn(spawnPart)
    if spawnPart and spawnPart:IsA("BasePart") then
        local character = LocalPlayer.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                humanoidRootPart.CFrame = spawnPart.CFrame + Vector3.new(0, 3, 0)
            end
        end
    end
end

-- Function to create spawn menu
local function createSpawnMenu(parentFrame)
    if spawnMenu then spawnMenu:Destroy() end
    
    spawnMenu = Instance.new("Frame")
    spawnMenu.Name = "SpawnMenu"
    spawnMenu.Size = UDim2.new(0, 150, 0, 300)
    spawnMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    spawnMenu.BorderSizePixel = 0
    
    local viewportSize = workspace.CurrentCamera.ViewportSize
    local isOnLeftSide = parentFrame.AbsolutePosition.X < viewportSize.X / 2
    local baseOffset = 10
    local position

    if isOnLeftSide then
        position = parentFrame.AbsolutePosition.X + parentFrame.AbsoluteSize.X + baseOffset
        if locationsMenu and locationsMenu.Parent then
            locationsMenu.Position = UDim2.new(0, position + spawnMenu.AbsoluteSize.X + baseOffset, 0, parentFrame.AbsolutePosition.Y)
        end
    else
        position = parentFrame.AbsolutePosition.X - 150 - baseOffset
        if locationsMenu and locationsMenu.Parent then
            locationsMenu.Position = UDim2.new(0, position - locationsMenu.AbsoluteSize.X - baseOffset, 0, parentFrame.AbsolutePosition.Y)
        end
    end

    spawnMenu.Position = UDim2.new(0, position, 0, parentFrame.AbsolutePosition.Y)
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = spawnMenu
    
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.Text = "Spawn Locations"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 14
    title.Font = Enum.Font.GothamBold
    title.Parent = spawnMenu
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "ScrollFrame"
    scrollFrame.Size = UDim2.new(1, -10, 1, -40)
    scrollFrame.Position = UDim2.new(0, 5, 0, 35)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 4
    scrollFrame.Parent = spawnMenu
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.Parent = scrollFrame
    listLayout.Padding = UDim.new(0, 5)
    listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    
    -- Get all spawn locations
    local spawns = workspace.world.spawns:GetChildren()
    for _, spawnFolder in ipairs(spawns) do
        local spawnPart = spawnFolder:FindFirstChild("spawn")
        if spawnPart then
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(0.9, 0, 0, 25)
            button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            button.Text = spawnFolder.Name
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.TextSize = 12
            button.Font = Enum.Font.GothamMedium
            button.BorderSizePixel = 0
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 6)
            buttonCorner.Parent = button
            
            button.MouseButton1Click:Connect(function()
                teleportToSpawn(spawnPart)
            end)
            
            button.Parent = scrollFrame
        end
    end
    
    -- Update ScrollingFrame canvas size
    listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y)
    end)
    
    spawnMenu.Parent = parentFrame.Parent
end

local function teleport(targetCFrame)
    local character = LocalPlayer.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = targetCFrame
        end
    end
end


local function createLocationsMenu(parentFrame)
    if locationsMenu then locationsMenu:Destroy() end
    
    locationsMenu = Instance.new("Frame")
    locationsMenu.Name = "LocationsMenu"
    locationsMenu.Size = UDim2.new(0, 250, 0, 300)
    locationsMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    locationsMenu.BorderSizePixel = 0
    
    local viewportSize = workspace.CurrentCamera.ViewportSize
    local isOnLeftSide = parentFrame.AbsolutePosition.X < viewportSize.X / 2
    local baseOffset = 10
    local position

    if isOnLeftSide then
        position = parentFrame.AbsolutePosition.X + parentFrame.AbsoluteSize.X + baseOffset
        if spawnMenu and spawnMenu.Parent then
            position = spawnMenu.AbsolutePosition.X + spawnMenu.AbsoluteSize.X + baseOffset
        end
    else
        position = parentFrame.AbsolutePosition.X - 250 - baseOffset
        if spawnMenu and spawnMenu.Parent then
            position = spawnMenu.AbsolutePosition.X - 250 - baseOffset
        else
            -- This ensures the locations menu stays at its wider position even when spawn menu is disabled
            position = parentFrame.AbsolutePosition.X - 250 - baseOffset
        end
    end

    locationsMenu.Position = UDim2.new(0, position, 0, parentFrame.AbsolutePosition.Y)
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = locationsMenu
    
    -- Create tab buttons
    local tabButtons = Instance.new("Frame")
    tabButtons.Size = UDim2.new(1, 0, 0, 30)
    tabButtons.BackgroundTransparency = 1
    tabButtons.Parent = locationsMenu
    
    local zonesButton = Instance.new("TextButton")
    zonesButton.Size = UDim2.new(0.33, 0, 1, 0)
    zonesButton.Position = UDim2.new(0, 0, 0, 0)
    zonesButton.Text = "Zones"
    zonesButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    zonesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    zonesButton.Parent = tabButtons

    local zonesbuttonCorner = Instance.new("UICorner")
    zonesbuttonCorner.CornerRadius = UDim.new(0, 6)
    zonesbuttonCorner.Parent = zonesButton
    
    local npcsButton = Instance.new("TextButton")
    npcsButton.Size = UDim2.new(0.33, 0, 1, 0)
    npcsButton.Position = UDim2.new(0.33, 0, 0, 0)
    npcsButton.Text = "NPCs"
    npcsButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    npcsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    npcsButton.Parent = tabButtons

    local npcsbuttonCorner = Instance.new("UICorner")
    npcsbuttonCorner.CornerRadius = UDim.new(0, 6)
    npcsbuttonCorner.Parent = npcsButton
    
    local itemsButton = Instance.new("TextButton")
    itemsButton.Size = UDim2.new(0.34, 0, 1, 0)
    itemsButton.Position = UDim2.new(0.66, 0, 0, 0)
    itemsButton.Text = "Items"
    itemsButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    itemsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    itemsButton.Parent = tabButtons

    local itemsbuttonCorner = Instance.new("UICorner")
    itemsbuttonCorner.CornerRadius = UDim.new(0, 6)
    itemsbuttonCorner.Parent = itemsButton
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "ScrollFrame"
    scrollFrame.Size = UDim2.new(1, -10, 1, -40)
    scrollFrame.Position = UDim2.new(0, 5, 0, 35)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 4
    scrollFrame.Parent = locationsMenu
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.Parent = scrollFrame
    listLayout.Padding = UDim.new(0, 5)
    listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    
    local function clearScrollFrame()
        for _, child in ipairs(scrollFrame:GetChildren()) do
            if child:IsA("TextButton") then
                child:Destroy()
            end
        end
    end
    
    local function createLocationButton(name, cframe)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0.9, 0, 0, 25)
        button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        button.Text = name:gsub("_", " "):gsub("^%l", string.upper)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextSize = 12
        button.Font = Enum.Font.GothamMedium
        button.BorderSizePixel = 0
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 6)
        buttonCorner.Parent = button
        
        button.MouseButton1Click:Connect(function()
            teleport(cframe)
        end)
        
        button.Parent = scrollFrame
    end
    
    local function updateContent(category)
        clearScrollFrame()
        if category == "Zones" then
            for _, name in ipairs(ZonesOrder) do
                if FishAreas[name] then
                    createLocationButton(name, FishAreas[name])
                end
            end
        elseif category == "NPCs" then
            for _, name in ipairs(NpcsOrder) do
                if NpcsPeople[name] then
                    createLocationButton(name, NpcsPeople[name])
                end
            end
        elseif category == "Items" then
            for _, name in ipairs(ItemsOrder) do
                if ItemsLocation[name] then
                    createLocationButton(name, ItemsLocation[name])
                end
            end
        end
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y)
    end
    
    zonesButton.MouseButton1Click:Connect(function()
        zonesButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        npcsButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        itemsButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        updateContent("Zones")
    end)
    
    npcsButton.MouseButton1Click:Connect(function()
        zonesButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        npcsButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        itemsButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        updateContent("NPCs")
    end)
    
    itemsButton.MouseButton1Click:Connect(function()
        zonesButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        npcsButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        itemsButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        updateContent("Items")
    end)
    
    updateContent("Zones")
    locationsMenu.Parent = parentFrame.Parent
end


-- Function to save current position and rotation
local function saveCurrentPosition()
    local character = LocalPlayer.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            savedPosition = humanoidRootPart.Position
            savedRotation = humanoidRootPart.CFrame - humanoidRootPart.Position
        end
    end
end

-- Function to teleport
local function teleport(targetCFrame)
    local character = LocalPlayer.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = targetCFrame
        end
    end
end

-- Function to restore saved position
local function restorePosition()
    if savedPosition and savedRotation then
        local character = LocalPlayer.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local targetCFrame = CFrame.new(savedPosition) * savedRotation
                teleport(targetCFrame)
            end
        end
    end
end

-- Function to fire a ProximityPrompt
local function firePrompt(prompt)
    if prompt and isEnabled then
        fireproximityprompt(prompt)
    end
end

-- Function to check a single chest
local function checkChest(chest)
    local prompt = chest:FindFirstChild("ProximityPrompt")
    if prompt then
        firePrompt(prompt)
    end
end

-- Function to check all chests
local function checkAllChests()
    local chests = workspace.world.chests:GetChildren()
    for _, chest in ipairs(chests) do
        if chest:IsA("BasePart") then
            checkChest(chest)
        end
    end
end

-- Function to handle treasure map
local function handleTreasureMap()
    if isProcessingMap then return end
    
    local character = LocalPlayer.Character
    local humanoid = character and character:FindFirstChild("Humanoid")
    if not humanoid then return end
    
    local backpack = LocalPlayer:WaitForChild("Backpack")
    local treasureMap = backpack:FindFirstChild("Treasure Map") or character:FindFirstChild("Treasure Map")
    
    if treasureMap then
        isProcessingMap = true
        teleport(mapPosition)
        task.wait(0.5)
        
        local currentTool = character:FindFirstChildWhichIsA("Tool")
        if currentTool and currentTool.Name ~= "Treasure Map" then
            previousTool = currentTool
            currentTool.Parent = backpack
            task.wait(1)
        end
        
        if treasureMap.Parent == backpack then
            treasureMap.Parent = character
            task.wait(0.5)
        end
        
        local remote = workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Jack Marrow"):WaitForChild("treasure"):WaitForChild("repairmap")
        remote:InvokeServer()
        task.wait(1)
        
        local nextMap = backpack:FindFirstChild("Treasure Map") or character:FindFirstChild("Treasure Map")
        
        if not nextMap then
            task.wait(0.5)
            restorePosition()
            task.wait(0.5)
            
            if previousTool and previousTool.Parent == backpack then
                previousTool.Parent = character
            end
        end
        
        isProcessingMap = false
    else
        if savedPosition then
            restorePosition()
            task.wait(0.3)
        end
        
        if previousTool and previousTool.Parent == backpack then
            previousTool.Parent = character
        end
    end
end

-- Modified handleReel function for faster reeling
local function handleReel()
    local PlayerGUI = LocalPlayer:WaitForChild("PlayerGui")
    local reelUI = PlayerGUI:FindFirstChild("reel")
    
    if reelUI then
        local args = {
            [1] = 100,
            [2] = false
        }
        
        if isSpamMode then
            -- Spam mode: Send reel events with delay
            for i = 1, 3 do  -- Reduced number of events
                ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished"):FireServer(unpack(args))
                ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished"):FireServer(unpack(args))
                ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished"):FireServer(unpack(args))
                task.wait() -- Add small delay between events
            end
        else
            -- Safe mode: Single reel event
            ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished"):FireServer(unpack(args))
            task.wait(3) -- Add delay after safe mode reel
        end
    end
end

-- Function to handle auto-shake
local function handleShake()
    if not isFishing then return end
    
    local PlayerGUI = LocalPlayer:WaitForChild("PlayerGui")
    local shakeUI = PlayerGUI:FindFirstChild("shakeui")
    
    if shakeUI and shakeUI.Enabled then
        local safezone = shakeUI:FindFirstChild("safezone")
        if safezone then
            local button = safezone:FindFirstChild("button")
            if button and button:IsA("ImageButton") and button.Visible then
                local pos = button.AbsolutePosition
                local size = button.AbsoluteSize
                VirtualInputManager:SendMouseButtonEvent(pos.X + size.X / 2, pos.Y + size.Y / 2, 0, true, game, 1)
                task.wait(0.01)  -- Small wait to make the click more natural
                VirtualInputManager:SendMouseButtonEvent(pos.X + size.X / 2, pos.Y + size.Y / 2, 0, false, game, 1)
            end
        end
    end
end

-- Function to handle fishing
local function handleFishing()
    if not isFishing then return end
    
    local character = LocalPlayer.Character
    if not character then return end
    
    local equippedTool = character:FindFirstChildWhichIsA("Tool")
    if not equippedTool or not equippedTool.Name:match("Rod$") then return end
    
    -- Check for reel UI first
    handleReel()
    
    -- Check if bobber exists and enough time has passed since last cast
    local bobber = equippedTool:FindFirstChild("bobber")
    if not bobber and tick() - lastCastTime >= CAST_COOLDOWN then
        local args = {
            [1] = math.random(90, 100),
            [2] = 1
        }
        equippedTool.events.cast:FireServer(unpack(args))
        lastCastTime = tick()
        task.wait(0.5)  -- Wait after casting to prevent spam
    end
end

-- Create GUI
local function createGui()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ChestCollectorGUI"
    screenGui.ResetOnSpawn = false
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 200, 0, 220)
    mainFrame.Position = UDim2.new(0.5, 810 , 0.100000001, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BorderSizePixel = 0
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = mainFrame
    
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Fisch ⭐ TerraOnTop"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 16
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0.8, 0, 0, 30)
    toggleButton.Position = UDim2.new(0.1, 0, 0.15, 0)
    toggleButton.BackgroundColor3 = Color3.fromRGB(255, 59, 59)
    toggleButton.Text = "Auto Chest: Disabled"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextSize = 14
    toggleButton.Font = Enum.Font.GothamSemibold
    toggleButton.BorderSizePixel = 0
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = toggleButton
    toggleButton.Parent = mainFrame
    
    local fishButton = Instance.new("TextButton")
    fishButton.Name = "FishButton"
    fishButton.Size = UDim2.new(0.4, 0, 0, 30)
    fishButton.Position = UDim2.new(0.1, 0, 0.35, 0)
    fishButton.BackgroundColor3 = Color3.fromRGB(255, 59, 59)
    fishButton.Text = "Auto Fish"
    fishButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    fishButton.TextSize = 14
    fishButton.Font = Enum.Font.GothamSemibold
    fishButton.BorderSizePixel = 0
    
    local fishCorner = Instance.new("UICorner")
    fishCorner.CornerRadius = UDim.new(0, 6)
    fishCorner.Parent = fishButton
    fishButton.Parent = mainFrame

    local fishModeButton = Instance.new("TextButton")
    fishModeButton.Name = "FishModeButton"
    fishModeButton.Size = UDim2.new(0.3, 0, 0, 30)
    fishModeButton.Position = UDim2.new(0.6, 0, 0.35, 0)
    fishModeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    fishModeButton.Text = "Mode: Safe"  -- Initial text
    fishModeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    fishModeButton.TextSize = 14
    fishModeButton.Font = Enum.Font.GothamSemibold
    fishModeButton.BorderSizePixel = 0
    
    local fishModeCorner = Instance.new("UICorner")
    fishModeCorner.CornerRadius = UDim.new(0, 6)
    fishModeCorner.Parent = fishModeButton
    fishModeButton.Parent = mainFrame

    --spawn buttons
    local spawnButton = Instance.new("TextButton")
    spawnButton.Name = "SpawnButton"
    spawnButton.Size = UDim2.new(0.8, 0, 0, 25)
    spawnButton.Position = UDim2.new(0.1, 0, 0.55, 0)
    spawnButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    spawnButton.Text = "Spawns Menu"
    spawnButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    spawnButton.TextSize = 12
    spawnButton.Font = Enum.Font.GothamMedium
    spawnButton.BorderSizePixel = 0
    
    local spawnCorner = Instance.new("UICorner")
    spawnCorner.CornerRadius = UDim.new(0, 6)
    spawnCorner.Parent = spawnButton
    spawnButton.Parent = mainFrame

    local locationsButton = Instance.new("TextButton")
    locationsButton.Name = "LocationsButton"
    locationsButton.Size = UDim2.new(0.8, 0, 0, 25)
    locationsButton.Position = UDim2.new(0.1, 0, 0.70, 0)
    locationsButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    locationsButton.Text = "Locations Menu"
    locationsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    locationsButton.TextSize = 12
    locationsButton.Font = Enum.Font.GothamMedium
    locationsButton.BorderSizePixel = 0

    local locationsCorner = Instance.new("UICorner")
    locationsCorner.CornerRadius = UDim.new(0, 6)
    locationsCorner.Parent = locationsButton
    locationsButton.Parent = mainFrame

    -- Move destroy button down
    local destroyButton = Instance.new("TextButton")
    destroyButton.Name = "DestroyButton"
    destroyButton.Size = UDim2.new(0.8, 0, 0, 25)
    destroyButton.Position = UDim2.new(0.1, 0, 0.85, 0)
    destroyButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    destroyButton.Text = "Destroy GUI"
    destroyButton.TextColor3 = Color3.fromRGB(163, 0, 5)
    destroyButton.TextSize = 12
    destroyButton.Font = Enum.Font.GothamMedium
    destroyButton.BorderSizePixel = 0
    
    local destroyCorner = Instance.new("UICorner")
    destroyCorner.CornerRadius = UDim.new(0, 6)
    destroyCorner.Parent = destroyButton
    destroyButton.Parent = mainFrame
    
    local function update(input)
        local delta = input.Position - dragStart
        local newPosition = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        mainFrame.Position = newPosition
        
        -- Check which side of the screen the main frame is on
        local viewportSize = workspace.CurrentCamera.ViewportSize
        local isOnLeftSide = mainFrame.AbsolutePosition.X < viewportSize.X / 2
        
        if spawnMenu then
            if isOnLeftSide then
                spawnMenu.Position = UDim2.new(0, mainFrame.AbsolutePosition.X + mainFrame.AbsoluteSize.X + 10, 0, mainFrame.AbsolutePosition.Y)
            else
                spawnMenu.Position = UDim2.new(0, mainFrame.AbsolutePosition.X - spawnMenu.AbsoluteSize.X - 10, 0, mainFrame.AbsolutePosition.Y)
            end
        end
        
        if locationsMenu then
            if isOnLeftSide then
                local offset = spawnMenu and 170 or 10
                locationsMenu.Position = UDim2.new(0, mainFrame.AbsolutePosition.X + mainFrame.AbsoluteSize.X + offset, 0, mainFrame.AbsolutePosition.Y)
            else
                local offset = spawnMenu and 170 or 10
                locationsMenu.Position = UDim2.new(0, mainFrame.AbsolutePosition.X - locationsMenu.AbsoluteSize.X - offset, 0, mainFrame.AbsolutePosition.Y)
            end
        end
    end
    
    mainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    mainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
    
    toggleButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        
        if isEnabled then
            saveCurrentPosition()
        else
            previousTool = nil
            isProcessingMap = false
            savedPosition = nil
            savedRotation = nil
        end
        
        local targetColor = isEnabled and Color3.fromRGB(40, 173, 40) or Color3.fromRGB(255, 59, 59)
        local targetText = isEnabled and "Auto Chest: Enabled" or "Auto Chest: Disabled"
        
        local colorTween = TweenService:Create(toggleButton, TweenInfo.new(0.3), {BackgroundColor3 = targetColor})
        colorTween:Play()
        
        toggleButton.Text = targetText
    end)
    
    fishButton.MouseButton1Click:Connect(function()
        isFishing = not isFishing
        
        local targetColor = isFishing and Color3.fromRGB(40, 173, 40) or Color3.fromRGB(255, 59, 59)
        local targetText = isFishing and "Auto Fish" or "Auto Fish"
        
        local colorTween = TweenService:Create(fishButton, TweenInfo.new(0.3), {BackgroundColor3 = targetColor})
        colorTween:Play()
        
        fishButton.Text = targetText
    end)

    fishModeButton.MouseButton1Click:Connect(function()
        isSpamMode = not isSpamMode
        fishModeButton.Text = isSpamMode and "Mode: Spam" or "Mode: Safe"
        fishModeButton.BackgroundColor3 = isSpamMode and Color3.fromRGB(0, 110, 49) or Color3.fromRGB(40, 40, 40)
    end)
    
    spawnButton.MouseButton1Click:Connect(function()
        spawnMenuOpen = not spawnMenuOpen
        if spawnMenuOpen then
            createSpawnMenu(mainFrame)
        else
            if spawnMenu then
                spawnMenu:Destroy()
                spawnMenu = nil
                
                -- Add specific repositioning for locations menu when spawn menu is closed
                if locationsMenu and locationsMenu.Parent then
                    local viewportSize = workspace.CurrentCamera.ViewportSize
                    local isOnLeftSide = mainFrame.AbsolutePosition.X < viewportSize.X / 2
                    local baseOffset = 10
                    
                    if isOnLeftSide then
                        locationsMenu.Position = UDim2.new(0, mainFrame.AbsolutePosition.X + mainFrame.AbsoluteSize.X + baseOffset, 0, mainFrame.AbsolutePosition.Y)
                    else
                        -- This ensures the locations menu maintains its wider position
                        locationsMenu.Position = UDim2.new(0, mainFrame.AbsolutePosition.X - 250 - baseOffset, 0, mainFrame.AbsolutePosition.Y)
                    end
                end
            end
        end
    end)

    locationsButton.MouseButton1Click:Connect(function()
        locationsMenuOpen = not locationsMenuOpen
        if locationsMenuOpen then
            createLocationsMenu(mainFrame)
        else
            if locationsMenu then
                locationsMenu:Destroy()
                locationsMenu = nil
            end
        end
    end)
    
    destroyButton.MouseButton1Click:Connect(function()
        isEnabled = false
        isFishing = false
        if spawnMenu then spawnMenu:Destroy() end
        screenGui:Destroy()
    end)
    
    mainFrame.Parent = screenGui
    screenGui.Parent = LocalPlayer.PlayerGui
end

-- Main loop
local function mainLoop()
    -- Separate thread for shake handling to make it more responsive
    task.spawn(function()
        while task.wait(0.01) do
            if isFishing then
                handleShake()
            end
        end
    end)
    
    -- Main loop for other functions
    while task.wait() do
        if isFishing then
            handleFishing()
        end
        
        if isEnabled then
            checkAllChests()
            task.wait(0.1)
            handleTreasureMap()
        end
    end
end

-- Create GUI and start the loop
createGui()
coroutine.wrap(mainLoop)()
